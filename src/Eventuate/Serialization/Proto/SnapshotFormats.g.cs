// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SnapshotFormats.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Eventuate.Serialization.Proto {

  /// <summary>Holder for reflection information generated from SnapshotFormats.proto</summary>
  internal static partial class SnapshotFormatsReflection {

    #region Descriptor
    /// <summary>File descriptor for SnapshotFormats.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SnapshotFormatsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVTbmFwc2hvdEZvcm1hdHMucHJvdG8SHUV2ZW50dWF0ZS5TZXJpYWxpemF0",
            "aW9uLlByb3RvGhNDb21tb25Gb3JtYXRzLnByb3RvGhlEdXJhYmxlRXZlbnRG",
            "b3JtYXRzLnByb3RvIq4DCg5TbmFwc2hvdEZvcm1hdBI9CgdwYXlsb2FkGAEg",
            "ASgLMiwuRXZlbnR1YXRlLlNlcmlhbGl6YXRpb24uUHJvdG8uUGF5bG9hZEZv",
            "cm1hdBIRCgllbWl0dGVySWQYAiABKAkSRAoJbGFzdEV2ZW50GAMgASgLMjEu",
            "RXZlbnR1YXRlLlNlcmlhbGl6YXRpb24uUHJvdG8uRHVyYWJsZUV2ZW50Rm9y",
            "bWF0EkQKC2N1cnJlbnRUaW1lGAQgASgLMi8uRXZlbnR1YXRlLlNlcmlhbGl6",
            "YXRpb24uUHJvdG8uVmVjdG9yVGltZUZvcm1hdBJOChBkZWxpdmVyeUF0dGVt",
            "cHRzGAUgAygLMjQuRXZlbnR1YXRlLlNlcmlhbGl6YXRpb24uUHJvdG8uRGVs",
            "aXZlcnlBdHRlbXB0Rm9ybWF0EloKFnBlcnNpc3RPbkV2ZW50UmVxdWVzdHMY",
            "BiADKAsyOi5FdmVudHVhdGUuU2VyaWFsaXphdGlvbi5Qcm90by5QZXJzaXN0",
            "T25FdmVudFJlcXVlc3RGb3JtYXQSEgoKc2VxdWVuY2VOchgHIAEoAyJ/ChVE",
            "ZWxpdmVyeUF0dGVtcHRGb3JtYXQSEgoKZGVsaXZlcnlJZBgBIAEoCRI9Cgdt",
            "ZXNzYWdlGAIgASgLMiwuRXZlbnR1YXRlLlNlcmlhbGl6YXRpb24uUHJvdG8u",
            "UGF5bG9hZEZvcm1hdBITCgtkZXN0aW5hdGlvbhgDIAEoCSLXAQobUGVyc2lz",
            "dE9uRXZlbnRSZXF1ZXN0Rm9ybWF0EhIKCnNlcXVlbmNlTnIYASABKAMSUQoK",
            "aW52b2NhdGlvbhgCIAMoCzI9LkV2ZW50dWF0ZS5TZXJpYWxpemF0aW9uLlBy",
            "b3RvLlBlcnNpc3RPbkV2ZW50SW52b2NhdGlvbkZvcm1hdBISCgppbnN0YW5j",
            "ZUlkGAMgASgFEj0KB2V2ZW50SWQYBCABKAsyLC5FdmVudHVhdGUuU2VyaWFs",
            "aXphdGlvbi5Qcm90by5FdmVudElkRm9ybWF0IoQBCh5QZXJzaXN0T25FdmVu",
            "dEludm9jYXRpb25Gb3JtYXQSOwoFZXZlbnQYASABKAsyLC5FdmVudHVhdGUu",
            "U2VyaWFsaXphdGlvbi5Qcm90by5QYXlsb2FkRm9ybWF0EiUKHWN1c3RvbURl",
            "c3RpbmF0aW9uQWdncmVnYXRlSWRzGAIgAygJInwKHENvbmN1cnJlbnRWZXJz",
            "aW9uc1RyZWVGb3JtYXQSTQoEcm9vdBgBIAEoCzI/LkV2ZW50dWF0ZS5TZXJp",
            "YWxpemF0aW9uLlByb3RvLkNvbmN1cnJlbnRWZXJzaW9uc1RyZWVOb2RlRm9y",
            "bWF0Eg0KBW93bmVyGAIgASgJIsoBCiBDb25jdXJyZW50VmVyc2lvbnNUcmVl",
            "Tm9kZUZvcm1hdBJBCgl2ZXJzaW9uZWQYASABKAsyLi5FdmVudHVhdGUuU2Vy",
            "aWFsaXphdGlvbi5Qcm90by5WZXJzaW9uZWRGb3JtYXQSEAoIcmVqZWN0ZWQY",
            "AiABKAgSUQoIY2hpbGRyZW4YAyADKAsyPy5FdmVudHVhdGUuU2VyaWFsaXph",
            "dGlvbi5Qcm90by5Db25jdXJyZW50VmVyc2lvbnNUcmVlTm9kZUZvcm1hdCJx",
            "ChNFdmVudExvZ0Nsb2NrRm9ybWF0EhIKCnNlcXVlbmNlTnIYASABKAMSRgoN",
            "dmVyc2lvblZlY3RvchgCIAEoCzIvLkV2ZW50dWF0ZS5TZXJpYWxpemF0aW9u",
            "LlByb3RvLlZlY3RvclRpbWVGb3JtYXRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Eventuate.Serialization.Proto.CommonFormatsReflection.Descriptor, global::Eventuate.Serialization.Proto.DurableEventFormatsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventuate.Serialization.Proto.SnapshotFormat), global::Eventuate.Serialization.Proto.SnapshotFormat.Parser, new[]{ "Payload", "EmitterId", "LastEvent", "CurrentTime", "DeliveryAttempts", "PersistOnEventRequests", "SequenceNr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventuate.Serialization.Proto.DeliveryAttemptFormat), global::Eventuate.Serialization.Proto.DeliveryAttemptFormat.Parser, new[]{ "DeliveryId", "Message", "Destination" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventuate.Serialization.Proto.PersistOnEventRequestFormat), global::Eventuate.Serialization.Proto.PersistOnEventRequestFormat.Parser, new[]{ "SequenceNr", "Invocation", "InstanceId", "EventId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventuate.Serialization.Proto.PersistOnEventInvocationFormat), global::Eventuate.Serialization.Proto.PersistOnEventInvocationFormat.Parser, new[]{ "Event", "CustomDestinationAggregateIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeFormat), global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeFormat.Parser, new[]{ "Root", "Owner" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeNodeFormat), global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeNodeFormat.Parser, new[]{ "Versioned", "Rejected", "Children" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventuate.Serialization.Proto.EventLogClockFormat), global::Eventuate.Serialization.Proto.EventLogClockFormat.Parser, new[]{ "SequenceNr", "VersionVector" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class SnapshotFormat : pb::IMessage<SnapshotFormat> {
    private static readonly pb::MessageParser<SnapshotFormat> _parser = new pb::MessageParser<SnapshotFormat>(() => new SnapshotFormat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SnapshotFormat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventuate.Serialization.Proto.SnapshotFormatsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotFormat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotFormat(SnapshotFormat other) : this() {
      Payload = other.payload_ != null ? other.Payload.Clone() : null;
      emitterId_ = other.emitterId_;
      LastEvent = other.lastEvent_ != null ? other.LastEvent.Clone() : null;
      CurrentTime = other.currentTime_ != null ? other.CurrentTime.Clone() : null;
      deliveryAttempts_ = other.deliveryAttempts_.Clone();
      persistOnEventRequests_ = other.persistOnEventRequests_.Clone();
      sequenceNr_ = other.sequenceNr_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotFormat Clone() {
      return new SnapshotFormat(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private global::Eventuate.Serialization.Proto.PayloadFormat payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Eventuate.Serialization.Proto.PayloadFormat Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    /// <summary>Field number for the "emitterId" field.</summary>
    public const int EmitterIdFieldNumber = 2;
    private string emitterId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EmitterId {
      get { return emitterId_; }
      set {
        emitterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastEvent" field.</summary>
    public const int LastEventFieldNumber = 3;
    private global::Eventuate.Serialization.Proto.DurableEventFormat lastEvent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Eventuate.Serialization.Proto.DurableEventFormat LastEvent {
      get { return lastEvent_; }
      set {
        lastEvent_ = value;
      }
    }

    /// <summary>Field number for the "currentTime" field.</summary>
    public const int CurrentTimeFieldNumber = 4;
    private global::Eventuate.Serialization.Proto.VectorTimeFormat currentTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Eventuate.Serialization.Proto.VectorTimeFormat CurrentTime {
      get { return currentTime_; }
      set {
        currentTime_ = value;
      }
    }

    /// <summary>Field number for the "deliveryAttempts" field.</summary>
    public const int DeliveryAttemptsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Eventuate.Serialization.Proto.DeliveryAttemptFormat> _repeated_deliveryAttempts_codec
        = pb::FieldCodec.ForMessage(42, global::Eventuate.Serialization.Proto.DeliveryAttemptFormat.Parser);
    private readonly pbc::RepeatedField<global::Eventuate.Serialization.Proto.DeliveryAttemptFormat> deliveryAttempts_ = new pbc::RepeatedField<global::Eventuate.Serialization.Proto.DeliveryAttemptFormat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Eventuate.Serialization.Proto.DeliveryAttemptFormat> DeliveryAttempts {
      get { return deliveryAttempts_; }
    }

    /// <summary>Field number for the "persistOnEventRequests" field.</summary>
    public const int PersistOnEventRequestsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Eventuate.Serialization.Proto.PersistOnEventRequestFormat> _repeated_persistOnEventRequests_codec
        = pb::FieldCodec.ForMessage(50, global::Eventuate.Serialization.Proto.PersistOnEventRequestFormat.Parser);
    private readonly pbc::RepeatedField<global::Eventuate.Serialization.Proto.PersistOnEventRequestFormat> persistOnEventRequests_ = new pbc::RepeatedField<global::Eventuate.Serialization.Proto.PersistOnEventRequestFormat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Eventuate.Serialization.Proto.PersistOnEventRequestFormat> PersistOnEventRequests {
      get { return persistOnEventRequests_; }
    }

    /// <summary>Field number for the "sequenceNr" field.</summary>
    public const int SequenceNrFieldNumber = 7;
    private long sequenceNr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SequenceNr {
      get { return sequenceNr_; }
      set {
        sequenceNr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SnapshotFormat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SnapshotFormat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      if (EmitterId != other.EmitterId) return false;
      if (!object.Equals(LastEvent, other.LastEvent)) return false;
      if (!object.Equals(CurrentTime, other.CurrentTime)) return false;
      if(!deliveryAttempts_.Equals(other.deliveryAttempts_)) return false;
      if(!persistOnEventRequests_.Equals(other.persistOnEventRequests_)) return false;
      if (SequenceNr != other.SequenceNr) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (EmitterId.Length != 0) hash ^= EmitterId.GetHashCode();
      if (lastEvent_ != null) hash ^= LastEvent.GetHashCode();
      if (currentTime_ != null) hash ^= CurrentTime.GetHashCode();
      hash ^= deliveryAttempts_.GetHashCode();
      hash ^= persistOnEventRequests_.GetHashCode();
      if (SequenceNr != 0L) hash ^= SequenceNr.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payload_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (EmitterId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EmitterId);
      }
      if (lastEvent_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastEvent);
      }
      if (currentTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CurrentTime);
      }
      deliveryAttempts_.WriteTo(output, _repeated_deliveryAttempts_codec);
      persistOnEventRequests_.WriteTo(output, _repeated_persistOnEventRequests_codec);
      if (SequenceNr != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(SequenceNr);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (EmitterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmitterId);
      }
      if (lastEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastEvent);
      }
      if (currentTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentTime);
      }
      size += deliveryAttempts_.CalculateSize(_repeated_deliveryAttempts_codec);
      size += persistOnEventRequests_.CalculateSize(_repeated_persistOnEventRequests_codec);
      if (SequenceNr != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SequenceNr);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SnapshotFormat other) {
      if (other == null) {
        return;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          payload_ = new global::Eventuate.Serialization.Proto.PayloadFormat();
        }
        Payload.MergeFrom(other.Payload);
      }
      if (other.EmitterId.Length != 0) {
        EmitterId = other.EmitterId;
      }
      if (other.lastEvent_ != null) {
        if (lastEvent_ == null) {
          lastEvent_ = new global::Eventuate.Serialization.Proto.DurableEventFormat();
        }
        LastEvent.MergeFrom(other.LastEvent);
      }
      if (other.currentTime_ != null) {
        if (currentTime_ == null) {
          currentTime_ = new global::Eventuate.Serialization.Proto.VectorTimeFormat();
        }
        CurrentTime.MergeFrom(other.CurrentTime);
      }
      deliveryAttempts_.Add(other.deliveryAttempts_);
      persistOnEventRequests_.Add(other.persistOnEventRequests_);
      if (other.SequenceNr != 0L) {
        SequenceNr = other.SequenceNr;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (payload_ == null) {
              payload_ = new global::Eventuate.Serialization.Proto.PayloadFormat();
            }
            input.ReadMessage(payload_);
            break;
          }
          case 18: {
            EmitterId = input.ReadString();
            break;
          }
          case 26: {
            if (lastEvent_ == null) {
              lastEvent_ = new global::Eventuate.Serialization.Proto.DurableEventFormat();
            }
            input.ReadMessage(lastEvent_);
            break;
          }
          case 34: {
            if (currentTime_ == null) {
              currentTime_ = new global::Eventuate.Serialization.Proto.VectorTimeFormat();
            }
            input.ReadMessage(currentTime_);
            break;
          }
          case 42: {
            deliveryAttempts_.AddEntriesFrom(input, _repeated_deliveryAttempts_codec);
            break;
          }
          case 50: {
            persistOnEventRequests_.AddEntriesFrom(input, _repeated_persistOnEventRequests_codec);
            break;
          }
          case 56: {
            SequenceNr = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeliveryAttemptFormat : pb::IMessage<DeliveryAttemptFormat> {
    private static readonly pb::MessageParser<DeliveryAttemptFormat> _parser = new pb::MessageParser<DeliveryAttemptFormat>(() => new DeliveryAttemptFormat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeliveryAttemptFormat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventuate.Serialization.Proto.SnapshotFormatsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliveryAttemptFormat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliveryAttemptFormat(DeliveryAttemptFormat other) : this() {
      deliveryId_ = other.deliveryId_;
      Message = other.message_ != null ? other.Message.Clone() : null;
      destination_ = other.destination_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeliveryAttemptFormat Clone() {
      return new DeliveryAttemptFormat(this);
    }

    /// <summary>Field number for the "deliveryId" field.</summary>
    public const int DeliveryIdFieldNumber = 1;
    private string deliveryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeliveryId {
      get { return deliveryId_; }
      set {
        deliveryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::Eventuate.Serialization.Proto.PayloadFormat message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Eventuate.Serialization.Proto.PayloadFormat Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 3;
    private string destination_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Destination {
      get { return destination_; }
      set {
        destination_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeliveryAttemptFormat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeliveryAttemptFormat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeliveryId != other.DeliveryId) return false;
      if (!object.Equals(Message, other.Message)) return false;
      if (Destination != other.Destination) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeliveryId.Length != 0) hash ^= DeliveryId.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (Destination.Length != 0) hash ^= Destination.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeliveryId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeliveryId);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (Destination.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Destination);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeliveryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeliveryId);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (Destination.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Destination);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeliveryAttemptFormat other) {
      if (other == null) {
        return;
      }
      if (other.DeliveryId.Length != 0) {
        DeliveryId = other.DeliveryId;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          message_ = new global::Eventuate.Serialization.Proto.PayloadFormat();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.Destination.Length != 0) {
        Destination = other.Destination;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            DeliveryId = input.ReadString();
            break;
          }
          case 18: {
            if (message_ == null) {
              message_ = new global::Eventuate.Serialization.Proto.PayloadFormat();
            }
            input.ReadMessage(message_);
            break;
          }
          case 26: {
            Destination = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class PersistOnEventRequestFormat : pb::IMessage<PersistOnEventRequestFormat> {
    private static readonly pb::MessageParser<PersistOnEventRequestFormat> _parser = new pb::MessageParser<PersistOnEventRequestFormat>(() => new PersistOnEventRequestFormat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersistOnEventRequestFormat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventuate.Serialization.Proto.SnapshotFormatsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersistOnEventRequestFormat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersistOnEventRequestFormat(PersistOnEventRequestFormat other) : this() {
      sequenceNr_ = other.sequenceNr_;
      invocation_ = other.invocation_.Clone();
      instanceId_ = other.instanceId_;
      EventId = other.eventId_ != null ? other.EventId.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersistOnEventRequestFormat Clone() {
      return new PersistOnEventRequestFormat(this);
    }

    /// <summary>Field number for the "sequenceNr" field.</summary>
    public const int SequenceNrFieldNumber = 1;
    private long sequenceNr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SequenceNr {
      get { return sequenceNr_; }
      set {
        sequenceNr_ = value;
      }
    }

    /// <summary>Field number for the "invocation" field.</summary>
    public const int InvocationFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Eventuate.Serialization.Proto.PersistOnEventInvocationFormat> _repeated_invocation_codec
        = pb::FieldCodec.ForMessage(18, global::Eventuate.Serialization.Proto.PersistOnEventInvocationFormat.Parser);
    private readonly pbc::RepeatedField<global::Eventuate.Serialization.Proto.PersistOnEventInvocationFormat> invocation_ = new pbc::RepeatedField<global::Eventuate.Serialization.Proto.PersistOnEventInvocationFormat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Eventuate.Serialization.Proto.PersistOnEventInvocationFormat> Invocation {
      get { return invocation_; }
    }

    /// <summary>Field number for the "instanceId" field.</summary>
    public const int InstanceIdFieldNumber = 3;
    private int instanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = value;
      }
    }

    /// <summary>Field number for the "eventId" field.</summary>
    public const int EventIdFieldNumber = 4;
    private global::Eventuate.Serialization.Proto.EventIdFormat eventId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Eventuate.Serialization.Proto.EventIdFormat EventId {
      get { return eventId_; }
      set {
        eventId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersistOnEventRequestFormat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersistOnEventRequestFormat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SequenceNr != other.SequenceNr) return false;
      if(!invocation_.Equals(other.invocation_)) return false;
      if (InstanceId != other.InstanceId) return false;
      if (!object.Equals(EventId, other.EventId)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SequenceNr != 0L) hash ^= SequenceNr.GetHashCode();
      hash ^= invocation_.GetHashCode();
      if (InstanceId != 0) hash ^= InstanceId.GetHashCode();
      if (eventId_ != null) hash ^= EventId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SequenceNr != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SequenceNr);
      }
      invocation_.WriteTo(output, _repeated_invocation_codec);
      if (InstanceId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(InstanceId);
      }
      if (eventId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EventId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SequenceNr != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SequenceNr);
      }
      size += invocation_.CalculateSize(_repeated_invocation_codec);
      if (InstanceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstanceId);
      }
      if (eventId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersistOnEventRequestFormat other) {
      if (other == null) {
        return;
      }
      if (other.SequenceNr != 0L) {
        SequenceNr = other.SequenceNr;
      }
      invocation_.Add(other.invocation_);
      if (other.InstanceId != 0) {
        InstanceId = other.InstanceId;
      }
      if (other.eventId_ != null) {
        if (eventId_ == null) {
          eventId_ = new global::Eventuate.Serialization.Proto.EventIdFormat();
        }
        EventId.MergeFrom(other.EventId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SequenceNr = input.ReadInt64();
            break;
          }
          case 18: {
            invocation_.AddEntriesFrom(input, _repeated_invocation_codec);
            break;
          }
          case 24: {
            InstanceId = input.ReadInt32();
            break;
          }
          case 34: {
            if (eventId_ == null) {
              eventId_ = new global::Eventuate.Serialization.Proto.EventIdFormat();
            }
            input.ReadMessage(eventId_);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class PersistOnEventInvocationFormat : pb::IMessage<PersistOnEventInvocationFormat> {
    private static readonly pb::MessageParser<PersistOnEventInvocationFormat> _parser = new pb::MessageParser<PersistOnEventInvocationFormat>(() => new PersistOnEventInvocationFormat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersistOnEventInvocationFormat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventuate.Serialization.Proto.SnapshotFormatsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersistOnEventInvocationFormat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersistOnEventInvocationFormat(PersistOnEventInvocationFormat other) : this() {
      Event = other.event_ != null ? other.Event.Clone() : null;
      customDestinationAggregateIds_ = other.customDestinationAggregateIds_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersistOnEventInvocationFormat Clone() {
      return new PersistOnEventInvocationFormat(this);
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 1;
    private global::Eventuate.Serialization.Proto.PayloadFormat event_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Eventuate.Serialization.Proto.PayloadFormat Event {
      get { return event_; }
      set {
        event_ = value;
      }
    }

    /// <summary>Field number for the "customDestinationAggregateIds" field.</summary>
    public const int CustomDestinationAggregateIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_customDestinationAggregateIds_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> customDestinationAggregateIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CustomDestinationAggregateIds {
      get { return customDestinationAggregateIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersistOnEventInvocationFormat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersistOnEventInvocationFormat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Event, other.Event)) return false;
      if(!customDestinationAggregateIds_.Equals(other.customDestinationAggregateIds_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (event_ != null) hash ^= Event.GetHashCode();
      hash ^= customDestinationAggregateIds_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (event_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Event);
      }
      customDestinationAggregateIds_.WriteTo(output, _repeated_customDestinationAggregateIds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (event_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Event);
      }
      size += customDestinationAggregateIds_.CalculateSize(_repeated_customDestinationAggregateIds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersistOnEventInvocationFormat other) {
      if (other == null) {
        return;
      }
      if (other.event_ != null) {
        if (event_ == null) {
          event_ = new global::Eventuate.Serialization.Proto.PayloadFormat();
        }
        Event.MergeFrom(other.Event);
      }
      customDestinationAggregateIds_.Add(other.customDestinationAggregateIds_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (event_ == null) {
              event_ = new global::Eventuate.Serialization.Proto.PayloadFormat();
            }
            input.ReadMessage(event_);
            break;
          }
          case 18: {
            customDestinationAggregateIds_.AddEntriesFrom(input, _repeated_customDestinationAggregateIds_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ConcurrentVersionsTreeFormat : pb::IMessage<ConcurrentVersionsTreeFormat> {
    private static readonly pb::MessageParser<ConcurrentVersionsTreeFormat> _parser = new pb::MessageParser<ConcurrentVersionsTreeFormat>(() => new ConcurrentVersionsTreeFormat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConcurrentVersionsTreeFormat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventuate.Serialization.Proto.SnapshotFormatsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcurrentVersionsTreeFormat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcurrentVersionsTreeFormat(ConcurrentVersionsTreeFormat other) : this() {
      Root = other.root_ != null ? other.Root.Clone() : null;
      owner_ = other.owner_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcurrentVersionsTreeFormat Clone() {
      return new ConcurrentVersionsTreeFormat(this);
    }

    /// <summary>Field number for the "root" field.</summary>
    public const int RootFieldNumber = 1;
    private global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeNodeFormat root_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeNodeFormat Root {
      get { return root_; }
      set {
        root_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 2;
    private string owner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConcurrentVersionsTreeFormat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConcurrentVersionsTreeFormat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Root, other.Root)) return false;
      if (Owner != other.Owner) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (root_ != null) hash ^= Root.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (root_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Root);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Owner);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (root_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Root);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConcurrentVersionsTreeFormat other) {
      if (other == null) {
        return;
      }
      if (other.root_ != null) {
        if (root_ == null) {
          root_ = new global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeNodeFormat();
        }
        Root.MergeFrom(other.Root);
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (root_ == null) {
              root_ = new global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeNodeFormat();
            }
            input.ReadMessage(root_);
            break;
          }
          case 18: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ConcurrentVersionsTreeNodeFormat : pb::IMessage<ConcurrentVersionsTreeNodeFormat> {
    private static readonly pb::MessageParser<ConcurrentVersionsTreeNodeFormat> _parser = new pb::MessageParser<ConcurrentVersionsTreeNodeFormat>(() => new ConcurrentVersionsTreeNodeFormat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConcurrentVersionsTreeNodeFormat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventuate.Serialization.Proto.SnapshotFormatsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcurrentVersionsTreeNodeFormat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcurrentVersionsTreeNodeFormat(ConcurrentVersionsTreeNodeFormat other) : this() {
      Versioned = other.versioned_ != null ? other.Versioned.Clone() : null;
      rejected_ = other.rejected_;
      children_ = other.children_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConcurrentVersionsTreeNodeFormat Clone() {
      return new ConcurrentVersionsTreeNodeFormat(this);
    }

    /// <summary>Field number for the "versioned" field.</summary>
    public const int VersionedFieldNumber = 1;
    private global::Eventuate.Serialization.Proto.VersionedFormat versioned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Eventuate.Serialization.Proto.VersionedFormat Versioned {
      get { return versioned_; }
      set {
        versioned_ = value;
      }
    }

    /// <summary>Field number for the "rejected" field.</summary>
    public const int RejectedFieldNumber = 2;
    private bool rejected_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Rejected {
      get { return rejected_; }
      set {
        rejected_ = value;
      }
    }

    /// <summary>Field number for the "children" field.</summary>
    public const int ChildrenFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeNodeFormat> _repeated_children_codec
        = pb::FieldCodec.ForMessage(26, global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeNodeFormat.Parser);
    private readonly pbc::RepeatedField<global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeNodeFormat> children_ = new pbc::RepeatedField<global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeNodeFormat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Eventuate.Serialization.Proto.ConcurrentVersionsTreeNodeFormat> Children {
      get { return children_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConcurrentVersionsTreeNodeFormat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConcurrentVersionsTreeNodeFormat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Versioned, other.Versioned)) return false;
      if (Rejected != other.Rejected) return false;
      if(!children_.Equals(other.children_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (versioned_ != null) hash ^= Versioned.GetHashCode();
      if (Rejected != false) hash ^= Rejected.GetHashCode();
      hash ^= children_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (versioned_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Versioned);
      }
      if (Rejected != false) {
        output.WriteRawTag(16);
        output.WriteBool(Rejected);
      }
      children_.WriteTo(output, _repeated_children_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (versioned_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Versioned);
      }
      if (Rejected != false) {
        size += 1 + 1;
      }
      size += children_.CalculateSize(_repeated_children_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConcurrentVersionsTreeNodeFormat other) {
      if (other == null) {
        return;
      }
      if (other.versioned_ != null) {
        if (versioned_ == null) {
          versioned_ = new global::Eventuate.Serialization.Proto.VersionedFormat();
        }
        Versioned.MergeFrom(other.Versioned);
      }
      if (other.Rejected != false) {
        Rejected = other.Rejected;
      }
      children_.Add(other.children_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (versioned_ == null) {
              versioned_ = new global::Eventuate.Serialization.Proto.VersionedFormat();
            }
            input.ReadMessage(versioned_);
            break;
          }
          case 16: {
            Rejected = input.ReadBool();
            break;
          }
          case 26: {
            children_.AddEntriesFrom(input, _repeated_children_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class EventLogClockFormat : pb::IMessage<EventLogClockFormat> {
    private static readonly pb::MessageParser<EventLogClockFormat> _parser = new pb::MessageParser<EventLogClockFormat>(() => new EventLogClockFormat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventLogClockFormat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventuate.Serialization.Proto.SnapshotFormatsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLogClockFormat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLogClockFormat(EventLogClockFormat other) : this() {
      sequenceNr_ = other.sequenceNr_;
      VersionVector = other.versionVector_ != null ? other.VersionVector.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLogClockFormat Clone() {
      return new EventLogClockFormat(this);
    }

    /// <summary>Field number for the "sequenceNr" field.</summary>
    public const int SequenceNrFieldNumber = 1;
    private long sequenceNr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SequenceNr {
      get { return sequenceNr_; }
      set {
        sequenceNr_ = value;
      }
    }

    /// <summary>Field number for the "versionVector" field.</summary>
    public const int VersionVectorFieldNumber = 2;
    private global::Eventuate.Serialization.Proto.VectorTimeFormat versionVector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Eventuate.Serialization.Proto.VectorTimeFormat VersionVector {
      get { return versionVector_; }
      set {
        versionVector_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventLogClockFormat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventLogClockFormat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SequenceNr != other.SequenceNr) return false;
      if (!object.Equals(VersionVector, other.VersionVector)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SequenceNr != 0L) hash ^= SequenceNr.GetHashCode();
      if (versionVector_ != null) hash ^= VersionVector.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SequenceNr != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SequenceNr);
      }
      if (versionVector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VersionVector);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SequenceNr != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SequenceNr);
      }
      if (versionVector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VersionVector);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventLogClockFormat other) {
      if (other == null) {
        return;
      }
      if (other.SequenceNr != 0L) {
        SequenceNr = other.SequenceNr;
      }
      if (other.versionVector_ != null) {
        if (versionVector_ == null) {
          versionVector_ = new global::Eventuate.Serialization.Proto.VectorTimeFormat();
        }
        VersionVector.MergeFrom(other.VersionVector);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SequenceNr = input.ReadInt64();
            break;
          }
          case 18: {
            if (versionVector_ == null) {
              versionVector_ = new global::Eventuate.Serialization.Proto.VectorTimeFormat();
            }
            input.ReadMessage(versionVector_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
