// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ReplicationFilterFormats.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Eventuate.Serialization.Proto {

  /// <summary>Holder for reflection information generated from ReplicationFilterFormats.proto</summary>
  internal static partial class ReplicationFilterFormatsReflection {

    #region Descriptor
    /// <summary>File descriptor for ReplicationFilterFormats.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReplicationFilterFormatsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5SZXBsaWNhdGlvbkZpbHRlckZvcm1hdHMucHJvdG8SHUV2ZW50dWF0ZS5T",
            "ZXJpYWxpemF0aW9uLlByb3RvGhNDb21tb25Gb3JtYXRzLnByb3RvIrQCChtS",
            "ZXBsaWNhdGlvbkZpbHRlclRyZWVGb3JtYXQSVQoIbm9kZVR5cGUYASABKA4y",
            "Qy5FdmVudHVhdGUuU2VyaWFsaXphdGlvbi5Qcm90by5SZXBsaWNhdGlvbkZp",
            "bHRlclRyZWVGb3JtYXQuTm9kZVR5cGUSTAoIY2hpbGRyZW4YAiABKAsyOi5F",
            "dmVudHVhdGUuU2VyaWFsaXphdGlvbi5Qcm90by5SZXBsaWNhdGlvbkZpbHRl",
            "clRyZWVGb3JtYXQSPAoGZmlsdGVyGAMgASgLMiwuRXZlbnR1YXRlLlNlcmlh",
            "bGl6YXRpb24uUHJvdG8uUGF5bG9hZEZvcm1hdCIyCghOb2RlVHlwZRILCgdV",
            "TktOT1dOEAASCAoETEVBRhABEgcKA0FORBACEgYKAk9SEAMiEAoOTm9GaWx0",
            "ZXJGb3JtYXRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Eventuate.Serialization.Proto.CommonFormatsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventuate.Serialization.Proto.ReplicationFilterTreeFormat), global::Eventuate.Serialization.Proto.ReplicationFilterTreeFormat.Parser, new[]{ "NodeType", "Children", "Filter" }, null, new[]{ typeof(global::Eventuate.Serialization.Proto.ReplicationFilterTreeFormat.Types.NodeType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Eventuate.Serialization.Proto.NoFilterFormat), global::Eventuate.Serialization.Proto.NoFilterFormat.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class ReplicationFilterTreeFormat : pb::IMessage<ReplicationFilterTreeFormat> {
    private static readonly pb::MessageParser<ReplicationFilterTreeFormat> _parser = new pb::MessageParser<ReplicationFilterTreeFormat>(() => new ReplicationFilterTreeFormat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReplicationFilterTreeFormat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventuate.Serialization.Proto.ReplicationFilterFormatsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplicationFilterTreeFormat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplicationFilterTreeFormat(ReplicationFilterTreeFormat other) : this() {
      nodeType_ = other.nodeType_;
      Children = other.children_ != null ? other.Children.Clone() : null;
      Filter = other.filter_ != null ? other.Filter.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplicationFilterTreeFormat Clone() {
      return new ReplicationFilterTreeFormat(this);
    }

    /// <summary>Field number for the "nodeType" field.</summary>
    public const int NodeTypeFieldNumber = 1;
    private global::Eventuate.Serialization.Proto.ReplicationFilterTreeFormat.Types.NodeType nodeType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Eventuate.Serialization.Proto.ReplicationFilterTreeFormat.Types.NodeType NodeType {
      get { return nodeType_; }
      set {
        nodeType_ = value;
      }
    }

    /// <summary>Field number for the "children" field.</summary>
    public const int ChildrenFieldNumber = 2;
    private global::Eventuate.Serialization.Proto.ReplicationFilterTreeFormat children_;
    /// <summary>
    /// set if nodeType == AND | OR
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Eventuate.Serialization.Proto.ReplicationFilterTreeFormat Children {
      get { return children_; }
      set {
        children_ = value;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 3;
    private global::Eventuate.Serialization.Proto.PayloadFormat filter_;
    /// <summary>
    /// set if nodeType == LEAF
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Eventuate.Serialization.Proto.PayloadFormat Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReplicationFilterTreeFormat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReplicationFilterTreeFormat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeType != other.NodeType) return false;
      if (!object.Equals(Children, other.Children)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeType != 0) hash ^= NodeType.GetHashCode();
      if (children_ != null) hash ^= Children.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) NodeType);
      }
      if (children_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Children);
      }
      if (filter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Filter);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NodeType);
      }
      if (children_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Children);
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReplicationFilterTreeFormat other) {
      if (other == null) {
        return;
      }
      if (other.NodeType != 0) {
        NodeType = other.NodeType;
      }
      if (other.children_ != null) {
        if (children_ == null) {
          children_ = new global::Eventuate.Serialization.Proto.ReplicationFilterTreeFormat();
        }
        Children.MergeFrom(other.Children);
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          filter_ = new global::Eventuate.Serialization.Proto.PayloadFormat();
        }
        Filter.MergeFrom(other.Filter);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            nodeType_ = (global::Eventuate.Serialization.Proto.ReplicationFilterTreeFormat.Types.NodeType) input.ReadEnum();
            break;
          }
          case 18: {
            if (children_ == null) {
              children_ = new global::Eventuate.Serialization.Proto.ReplicationFilterTreeFormat();
            }
            input.ReadMessage(children_);
            break;
          }
          case 26: {
            if (filter_ == null) {
              filter_ = new global::Eventuate.Serialization.Proto.PayloadFormat();
            }
            input.ReadMessage(filter_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ReplicationFilterTreeFormat message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum NodeType {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("LEAF")] Leaf = 1,
        [pbr::OriginalName("AND")] And = 2,
        [pbr::OriginalName("OR")] Or = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// no fields
  /// </summary>
  internal sealed partial class NoFilterFormat : pb::IMessage<NoFilterFormat> {
    private static readonly pb::MessageParser<NoFilterFormat> _parser = new pb::MessageParser<NoFilterFormat>(() => new NoFilterFormat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NoFilterFormat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Eventuate.Serialization.Proto.ReplicationFilterFormatsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoFilterFormat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoFilterFormat(NoFilterFormat other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoFilterFormat Clone() {
      return new NoFilterFormat(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NoFilterFormat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NoFilterFormat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NoFilterFormat other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
